#!/bin/sh
# Backsnap
#
# Configure /etc/backsnap/config
# Then run /sbin/backsnap regularly
#
# Example usage from cron:
#   0 */4 * * *    root   /sbin/backsnap
#
#-------------------------------------------------------------------------

# Avoid accidental use of $PATH
unset PATH

# Define commands
ID=/usr/bin/id;
ECHO=/bin/echo;
MOUNT=/bin/mount;
RM=/bin/rm;
MV=/bin/mv;
CP=/bin/cp;
TOUCH=/bin/touch;
RSYNC=/usr/bin/rsync;

# Verify we are running as root
THISUID=`$ID -u`
if [ $THISUID -ne 0 ] ; then
  echo "This script will only run as root."
  exit 1
fi

# Include config file
source /etc/backsnap/config

# validate variables defined in config
if [ z$BACKUP_HOST = z ] ; then
  echo "BACKUP_HOST not defined"
  exit 1
fi
if [ z$BACKUP_HOST_PATH = z ] ; then
  echo "BACKUP_HOST_PATH not defined"
  exit 1
fi
if [ z$SNAPSHOT_DIR = z ] ; then
  echo "SNAPSHOT_DIR not defined"
  exit 1
fi
if [ ! -d $SNAPSHOT_DIR ] ; then
  echo "Snapshot directory $SNAPSHOT_DIR not found."
  exit 1
fi
if [ z$ROOT_SNAPSHOT_DIR = z ] ; then
  echo "ROOT_SNAPSHOT_DIR not defined"
  exit 1
fi
if [ ! -d $ROOT_SNAPSHOT_DIR ] ; then
  echo "Root Snapshot directory $ROOT_SNAPSHOT_DIR not found."
  exit 1
fi
if [ 'z$SOURCE_DIRS' = 'z' ] ; then
  echo "SOURCE_DIRS not defined"
  exit 1
fi
for dr in $SOURCE_DIRS; do
  if [ ! -d $dr ] ; then
    echo "Source directory $dr not found"
    exit 1
  fi
done



# NOT FINISHED:
exit 2;



PASSWORD_FILE=/usr/local/share/rsync.passwords

if ((`$ID -u` != 0)); then { $ECHO "Sorry, must be root.  Exiting..."; exit 1; } fi

HOST=$1
PATH=$2

if [ x$HOST = x ] ; then
  $ECHO "Sorry, you need a hostname as the first parameter.  Exiting...";
  exit 1;
fi
if [ x$PATH = x ] ; then
  $ECHO "Sorry, you need a path as the second parameter.  Exiting...";
  exit 1;
fi
if [ ! -d /${SNAPSHOT_SHARE}/${HOST} ] ; then
  $ECHO "Sorry, /${SNAPSHOT_SHARE}/${HOST} does not exist.  Exiting...";
  exit 1;
fi
cd /${SNAPSHOT_SHARE}/${HOST}

if [ -d 4 ] ; then
  $RM -rf 4
fi

if [ -d 3 ] ; then
  $MV 3 4
fi

if [ -d 2 ] ; then
  $MV 2 3
fi

if [ -d 1 ] ; then
  $MV 1 2
fi

if [ -d 0 ] ; then
  $MV 0 1
fi

$RSYNC -avx --password-file=${PASSWORD_FILE} --delete --link-dest=../1 ${HOST}::${SNAPSHOT_SHARE}${PATH} 0/
